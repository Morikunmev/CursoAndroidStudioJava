// Top-level build file where you can add configuration options common to all sub-projects/modules.
plugins {
    alias(libs.plugins.android.application) apply false
    id("com.google.gms.google-services") version "4.4.2" apply false
}

--------------------------build.gradle.kts(Module:app)--------------------------
plugins {
    alias(libs.plugins.android.application)
    id("com.google.gms.google-services")
}

android {
    namespace = "com.cursoandroid.app_firebase_yt"
    compileSdk = 34

    defaultConfig {
        applicationId = "com.cursoandroid.app_firebase_yt"
        minSdk = 24
        targetSdk = 34
        versionCode = 1
        versionName = "1.0"

        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            isMinifyEnabled = false
            proguardFiles(
                getDefaultProguardFile("proguard-android-optimize.txt"),
                "proguard-rules.pro"
            )
        }
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation(platform("com.google.firebase:firebase-bom:33.4.0"))
    implementation("com.google.firebase:firebase-analytics")
    implementation("com.google.firebase:firebase-database")  // Firebase Realtime Database
    implementation(libs.appcompat)
    implementation(libs.material)
    implementation(libs.activity)
    implementation(libs.constraintlayout)
    implementation(libs.firebase.firestore)
    testImplementation(libs.junit)
    androidTestImplementation(libs.ext.junit)
    androidTestImplementation(libs.espresso.core)
}
------------------------------libs.versions.toml------------------------------
[versions]
agp = "8.6.0"
junit = "4.13.2"
junitVersion = "1.2.1"
espressoCore = "3.6.1"
appcompat = "1.7.0"
material = "1.12.0"
activity = "1.9.2"
constraintlayout = "2.1.4"
firebaseFirestore = "25.1.0"

[libraries]
junit = { group = "junit", name = "junit", version.ref = "junit" }
ext-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junitVersion" }
espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }
appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcom-pat" }
material = { group = "com.google.android.material", name = "material", version.ref = "ma-terial" }
activity = { group = "androidx.activity", name = "activity", version.ref = "activity" }
constraintlayout = { group = "androidx.constraintlayout", name = "constraintlayout", ver-sion.ref = "constraintlayout" }
firebase-firestore = { group = "com.google.firebase", name = "firebase-firestore", ver-sion.ref = "firebaseFirestore" }

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }

------------------------------AndroidManifest.xml ------------------------------
<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools">

    <application
        android:allowBackup="true"
        android:dataExtractionRules="@xml/data_extraction_rules"
        android:fullBackupContent="@xml/backup_rules"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/Theme.App_Firebase_YT"
        tools:targetApi="31">
        <activity
            android:name=".MainActivity"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
    </application>

</manifest>

------------------------------------------MainActivity.java------------------------------------------
package com.cursoandroid.app_firebase_yt;

import android.content.Context;
import android.content.DialogInterface;
import android.os.Bundle;
import android.provider.ContactsContract;
import android.view.View;
import android.view.inputmethod.InputMethodManager;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ListView;
import android.widget.Toast;

import androidx.activity.EdgeToEdge;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.app.AlertDialog;
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.graphics.Insets;
import androidx.core.view.ViewCompat;
import androidx.core.view.WindowInsetsCompat;

import com.google.firebase.Firebase;
import com.google.firebase.database.ChildEventListener;
import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.ValueEventListener;

import java.util.ArrayList;

public class MainActivity extends AppCompatActivity {
    private EditText txtid, txtnom;
    private Button btnbus, btnmod, btnreg, btneli;
    private ListView lvDatos;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        EdgeToEdge.enable(this);
        setContentView(R.layout.activity_main);
        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -> {
            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());
            v.setPadding(systemBars.left, systemBars.top, systemBars.right, system-Bars.bottom);
            return insets;
        });
        txtid = findViewById(R.id.txtid);
        txtnom = findViewById(R.id.txtnom);
        btnbus = findViewById(R.id.btnbus);
        btnmod = findViewById(R.id.btnmod);
        btnreg = findViewById(R.id.btnreg);
        btneli = findViewById(R.id.btneli);
        lvDatos = findViewById(R.id.lvDatos);

        botonBuscar();
        botonModificar();
        botonRegistrar();
        botonEliminar();
        listarLuchadores();
    } //Cierra el onCreate

    private void botonBuscar() {
        btnbus.setOnClickListener(new View.OnClickListener(){
            @Override
            public void onClick(View v){
                if(txtid.getText().toString().trim().isEmpty()){
                    ocultarTeclado();
                    Toast.makeText(MainActivity.this,"Digite el ID a Bus-car",Toast.LENGTH_SHORT).show();
                }else {
                    int id = Integer.parseInt(txtid.getText().toString());
                    FirebaseDatabase db = FirebaseDatabase.getInstance();
                    DatabaseReference dbref = db.getReference(Luchador.class.getSimpleName());
                    //DatabaseReference dbref = db.getReference().child("Luchador");
                    dbref.addListenerForSingleValueEvent(new ValueEventListener() {
                        @Override
                        public void onDataChange(@NonNull DataSnapshot snapshot) {
                            String aux = Integer.toString(id);
                            boolean res = false;
                            for (DataSnapshot x: snapshot.getChildren()){
                                if (aux.equalsIgnoreCase(x.child("id").getValue().toString())) {
                                    res = true;
                                    ocultarTeclado();
                                    txtnom.setText(x.child("nombre").getValue().toString());
                                    break;}
                            }
                            if (res==false){
                                ocultarTeclado();
                                Toast.makeText(MainActivity.this, "No se Encuentra el Lu-chador con el ID ("+id+")", Toast.LENGTH_SHORT).show();
                            }

                        }
                        @Override
                        public void onCancelled(@NonNull DatabaseError error) {

                        }
                    });
                }
            }
        });

    }

    private void botonModificar() {
        btnmod.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                if (txtid.getText().toString().trim().isEmpty() || txtnom.getText().toString().trim().isEmpty()) {
                    ocultarTeclado();
                    Toast.makeText(MainActivity.this, "Complete los Campos Faltantes!!", Toast.LENGTH_SHORT).show();
                } else { // Cambi√© "else{" a "else {"
                    int id = Integer.parseInt(txtid.getText().toString());
                    String nom = txtnom.getText().toString();
                    FirebaseDatabase db = FirebaseDatabase.getInstance();
                    DatabaseReference dbref = db.getReference(Luchador.class.getSimpleName());

                    dbref.addListenerForSingleValueEvent(new ValueEventListener() {
                        @Override
                        public void onDataChange(@NonNull DataSnapshot snapshot) {

                            boolean res2 = false;
                            for (DataSnapshot x: snapshot.getChildren()){
                                if (x.child("nombre").getValue().toString().equalsIgnoreCase(nom)) {
                                    res2 = true;
                                    listarLuchadores();
                                    Toast.makeText(MainActivity.this,"El Nombre ("+nom+") Ya existe!",Toast.LENGTH_SHORT).show();
                                    break;
                                }
                            }

                            if(res2 == false){
                                String aux = Integer.toString(id);
                                boolean res = false;
                                for (DataSnapshot x : snapshot.getChildren()) {
                                    if (x.child("id").getValue().toString().equalsIgnoreCase(aux)) {
                                        res = true;
                                        ocultarTeclado();
                                        x.getRef().child("nombre").setValue(nom);
                                        txtid.setText("");
                                        txtnom.setText("");
                                        listarLuchadores();
                                        Toast.makeText(MainActivity.this, "Luchador modi-ficado con √©xito!", Toast.LENGTH_SHORT).show();
                                        break;
                                    }
                                }

                                if (!res) { // Cambi√© "if (res==false)" a "if (!res)"
                                    ocultarTeclado();
                                    Toast.makeText(MainActivity.this, "No se Encuentra el Luchador con el ID (" + id + ")", Toast.LENGTH_SHORT).show();
                                    txtid.setText("");
                                    txtnom.setText("");
                                }
                            }
                        }
                        @Override
                        public void onCancelled(@NonNull DatabaseError error) {
                            // Manejar el error si la consulta a Firebase falla.
                        }
                    });
                }
            }
        });
    }

    private void botonEliminar() {
        btneli.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                if (txtid.getText().toString().trim().isEmpty()) {
                    ocultarTeclado();
                    Toast.makeText(MainActivity.this, "Digite el ID a Eliminar", Toast.LENGTH_SHORT).show();
                } else {
                    int id = Integer.parseInt(txtid.getText().toString());
                    FirebaseDatabase db = FirebaseDatabase.getInstance();
                    DatabaseReference dbref = db.getReference(Luchador.class.getSimpleName());

                    dbref.addListenerForSingleValueEvent(new ValueEventListener() {
                        @Override
                        public void onDataChange(@NonNull DataSnapshot snapshot) {
                            String aux = Integer.toString(id);
                            boolean encontrado = false; // Cambia la variable res[0] a un booleano simple.

                            for (DataSnapshot x : snapshot.getChildren()) {
                                if (aux.equalsIgnoreCase(x.child("id").getValue().toString())) {
                                    encontrado = true; // Actualiza a true cuando el lu-chador se encuentra.

                                    AlertDialog.Builder a = new AlertDia-log.Builder(MainActivity.this);
                                    a.setCancelable(false);
                                    a.setTitle("Pregunta");
                                    a.setMessage("¬øEst√° seguro de eliminar el Luchador con el ID (" + id + ")?");

                                    a.setNegativeButton("Cancelar", new DialogInterfa-ce.OnClickListener() {
                                        @Override
                                        public void onClick(DialogInterface dialogInterfa-ce, int i) {
                                            dialogInterface.dismiss(); // Cierra el di√°lo-go sin hacer nada.
                                        }
                                    });

                                    a.setPositiveButton("Aceptar", new DialogInterfa-ce.OnClickListener() {
                                        @Override
                                        public void onClick(DialogInterface dialogInterfa-ce, int i) {
                                            ocultarTeclado();
                                            x.getRef().removeValue(); // Elimina el lucha-dor de Firebase.
                                            listarLuchadores(); // Actualiza la lista de luchadores.
                                        }
                                    });

                                    a.show();
                                    break; // Salir del for cuando se encuentra el lucha-dor.
                                }
                            }

                            if (!encontrado) {
                                ocultarTeclado();
                                Toast.makeText(MainActivity.this, "No se Encuentra el Lu-chador con el ID (" + id + ")", Toast.LENGTH_SHORT).show();
                            }
                        }

                        @Override
                        public void onCancelled(@NonNull DatabaseError error) {
                            // Manejar el error si la consulta a Firebase falla.
                        }
                    });
                }
            }
        });
    }



    private void botonRegistrar() {
        btnreg.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                if (txtid.getText().toString().trim().isEmpty() || txt-nom.getText().toString().trim().isEmpty()) {
                    ocultarTeclado();
                    Toast.makeText(MainActivity.this, "Complete Los Campos Faltantes!!", Toast.LENGTH_SHORT).show();
                } else {
                    int id = Integer.parseInt(txtid.getText().toString());
                    String nom = txtnom.getText().toString();

                    FirebaseDatabase db = FirebaseDatabase.getInstance();
                    DatabaseReference dbref = db.getReference(Luchador.class.getSimpleName());

                    dbref.addListenerForSingleValueEvent(new ValueEventListener() {
                        @Override
                        public void onDataChange(@NonNull DataSnapshot snapshot) {
                            String aux = Integer.toString(id);
                            boolean res = false;
                            for (DataSnapshot x: snapshot.getChildren()){
                                if(x.child("id").getValue().toString().equalsIgnoreCase(aux)){
                                    res= true;
                                    ocultarTeclado();
                                    Toast.makeText(MainActivity.this, "Error. El ID ("+aux+") YA EXISTE", Toast.LENGTH_SHORT).show();
                                    break;
                                }
                            }

                            boolean res2= false;
                            for (DataSnapshot x: snapshot.getChildren()){
                                if(x.child("nombre").getValue().toString().equalsIgnoreCase(nom)){
                                    res2= true;
                                    ocultarTeclado();
                                    Toast.makeText(MainActivity.this, "Error. El nombre ("+nom+") YA EXISTE", Toast.LENGTH_SHORT).show();
                                    break;
                                }
                            }


                            if(res== false && res2==false){
                                Luchador luc = new Luchador(id, nom);
                                dbref.push().setValue(luc);
                                ocultarTeclado();
                                Toast.makeText(MainActivity.this, "Registro Exitoso!!", Toast.LENGTH_SHORT).show();
                                txtid.setText("");
                                txtnom.setText("");
                            }


                        }

                        @Override
                        public void onCancelled(@NonNull DatabaseError error) {
                            // Manejo de errores al cancelar la operaci√≥n
                        }
                    });
                }
            }
        });
    }

    private void listarLuchadores() {
        FirebaseDatabase db = FirebaseDatabase.getInstance();
        DatabaseReference dbref = db.getReference(Luchador.class.getSimpleName());
        ArrayList<Luchador> lisluc = new ArrayList<Luchador>();
        ArrayAdapter<Luchador>ada= new ArrayAdapter<Luchador>(MainActivity.this, an-droid.R.layout.simple_list_item_1,lisluc);
        lvDatos.setAdapter(ada);

        dbref.addChildEventListener(new ChildEventListener() {
            @Override
            public void onChildAdded(@NonNull DataSnapshot snapshot, @Nullable String pre-viousChildName) {
                Luchador luc = snapshot.getValue(Luchador.class);
                lisluc.add(luc);
                ada.notifyDataSetChanged();
            }
            @Override
            public void onChildChanged(@NonNull DataSnapshot snapshot, @Nullable String previousChildName) {
                ada.notifyDataSetChanged();
            }
            @Override
            public void onChildRemoved(@NonNull DataSnapshot snapshot) {}
            @Override
            public void onChildMoved(@NonNull DataSnapshot snapshot, @Nullable String pre-viousChildName) {}
            @Override
            public void onCancelled(@NonNull DatabaseError error) {}
        });

        lvDatos.setOnItemClickListener(new AdapterView.OnItemClickListener(){
            @Override
            public void onItemClick(AdapterView<?> AdapterView,View view, int i, long l){
                Luchador luc = lisluc.get(i);
                AlertDialog.Builder a = new AlertDialog.Builder(MainActivity.this);
                a.setCancelable(true);
                a.setTitle("Luchador seleccionado");
                String msg= "ID: "+luc.getId()+"\n\n";
                msg+= "Nombre: "+luc.getNombre();
                a.setMessage(msg);
                a.show();

            }
        });


    }//Cier

    private void ocultarTeclado(){
        View view = this.getCurrentFocus();
        if(view != null){
            InputMethodManager imm = (InputMethodManag-er)getSystemService(Context.INPUT_METHOD_SERVICE);
            imm.hideSoftInputFromWindow(view.getWindowToken(), 0);
        }
    }



}//Cierra la clase

-----------------------------------------Luchador.java-----------------------------------------
package com.cursoandroid.app_firebase_yt;

public class Luchador {
    private int id;
    private String nombre;

    public Luchador() {
    }

    public Luchador(int id, String nombre) {
        this.id = id;
        this.nombre = nombre;
    }

    public String getNombre() {
        return nombre;
    }

    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    @Override
    public String toString() {
        return nombre;
    }

}

